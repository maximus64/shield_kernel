/*
 * Copyright (c) 2015-2016, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <dt-bindings/media/camera.h>
#include <dt-bindings/platform/t210/t210.h>

#define CAM0_RST_L	TEGRA_GPIO(S, 4)
#define CAM0_PWDN	TEGRA_GPIO(S, 7)

/* camera control gpio definitions */
/ {
	host1x {
		vi {
			num-channels = <6>;
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					e3322_vi_in0: endpoint {
						remote-endpoint = <&imx219_out0>;
					};
				};
				port@1 {
					reg = <1>;
					e3322_vi_in1: endpoint {
						remote-endpoint = <&imx219_out1>;
					};
				};
				port@2 {
					reg = <2>;
					e3322_vi_in2: endpoint {
						remote-endpoint = <&imx219_out2>;
					};
				};
				port@3 {
					reg = <3>;
					e3322_vi_in3: endpoint {
						remote-endpoint = <&imx219_out3>;
					};
				};
				port@4 {
					reg = <4>;
					e3322_vi_in4: endpoint {
						remote-endpoint = <&imx219_out4>;
					};
				};
				port@5 {
					reg = <5>;
					e3322_vi_in5: endpoint {
						remote-endpoint = <&imx219_out5>;
					};
				};
			};
		};

		i2c@546c0000 {
			status = "okay";
			#address-cells = <1>;
			#size-cells = <0>;

			tca9548@77 {
				i2c@0 {
					imx219_a@10 {
						compatible = "nvidia,imx219";
						reg = <0x10>;

						physical_w = "5.095";
						physical_h = "4.930";

						sensor_model ="imx219";
						dovdd-supply = <&en_vdd_cam>;
						avdd-reg = "vana";
						dvdd-reg = "vdig";
						iovdd-reg = "dovdd";
						devnode = "video0";

						/* Defines number of frames to be dropped by driver internally after applying */
						/* sensor crop settings. Some sensors send corrupt frames after applying */
						/* crop co-ordinates */
						post_crop_frame_drop = "0";

						mode0 { // IMX219_MODE_3280X2464
							mclk_khz = "12000";
							num_lanes = "2";
							tegra_sinterface = "serial_a";
							discontinuous_clk = "yes";
							cil_settletime = "0";

							active_w = "3280";
							active_h = "2464";
							pixel_t = "bayer_rggb";
							readout_orientation = "90";
							line_length = "3448";
							inherent_gain = "1";
							mclk_multiplier = "25";
							pix_clk_hz = "170000000";

							min_gain_val = "1.0";
							max_gain_val = "16.0";
							min_hdr_ratio = "1";
							max_hdr_ratio = "64";
							min_framerate = "1.462526";
							max_framerate = "21";
							min_exp_time = "13";
							max_exp_time = "683709";
						};
						ports {
							#address-cells = <1>;
							#size-cells = <0>;

							port@0 {
								reg = <0>;
								imx219_out0: endpoint {
									csi-port = <0>;
									bus-width = <2>;
									remote-endpoint = <&e3322_vi_in0>;
								};
							};
						};
					};
				};
				i2c@1 {
					imx219_b@10 {
						compatible = "nvidia,imx219";
						reg = <0x10>;

						physical_w = "5.095";
						physical_h = "4.930";

						sensor_model ="imx219";
						avdd-reg = "vana";
						dvdd-reg = "vdig";
						iovdd-reg = "dovdd";
						devnode = "video1";

						/* Defines number of frames to be dropped by driver internally after applying */
						/* sensor crop settings. Some sensors send corrupt frames after applying */
						/* crop co-ordinates */
						post_crop_frame_drop = "0";

						mode0 { // IMX219_MODE_3280X2464
							mclk_khz = "12000";
							num_lanes = "2";
							tegra_sinterface = "serial_b";
							discontinuous_clk = "yes";
							cil_settletime = "0";

							active_w = "3280";
							active_h = "2464";
							pixel_t = "bayer_rggb";
							readout_orientation = "90";
							line_length = "3448";
							inherent_gain = "1";
							mclk_multiplier = "25";
							pix_clk_hz = "170000000";

							min_gain_val = "1.0";
							max_gain_val = "16.0";
							min_hdr_ratio = "1";
							max_hdr_ratio = "64";
							min_framerate = "1.462526";
							max_framerate = "21";
							min_exp_time = "13";
							max_exp_time = "683709";
						};
						ports {
							#address-cells = <1>;
							#size-cells = <0>;

							port@0 {
								reg = <0>;
								imx219_out1: endpoint {
									csi-port = <1>;
									bus-width = <2>;
									remote-endpoint = <&e3322_vi_in1>;
								};
							};
						};
					};
				};
				i2c@2 {
					imx219_c@10 {
						compatible = "nvidia,imx219";
						reg = <0x10>;

						physical_w = "5.095";
						physical_h = "4.930";

						sensor_model ="imx219";
						avdd-reg = "vana";
						dvdd-reg = "vdig";
						iovdd-reg = "dovdd";
						devnode = "video2";

						/* Defines number of frames to be dropped by driver internally after applying */
						/* sensor crop settings. Some sensors send corrupt frames after applying */
						/* crop co-ordinates */
						post_crop_frame_drop = "0";

						mode0 { // IMX219_MODE_3280X2464
							mclk_khz = "12000";
							num_lanes = "2";
							tegra_sinterface = "serial_c";
							discontinuous_clk = "yes";
							cil_settletime = "0";

							active_w = "3280";
							active_h = "2464";
							pixel_t = "bayer_rggb";
							readout_orientation = "90";
							line_length = "3448";
							inherent_gain = "1";
							mclk_multiplier = "25";
							pix_clk_hz = "170000000";

							min_gain_val = "1.0";
							max_gain_val = "16.0";
							min_hdr_ratio = "1";
							max_hdr_ratio = "64";
							min_framerate = "1.462526";
							max_framerate = "21";
							min_exp_time = "13";
							max_exp_time = "683709";
						};
						ports {
							#address-cells = <1>;
							#size-cells = <0>;

							port@0 {
								reg = <0>;
								imx219_out2: endpoint {
									csi-port = <2>;
									bus-width = <2>;
									remote-endpoint = <&e3322_vi_in2>;
								};
							};
						};
					};
				};
				i2c@3 {
					imx219_d@10 {
						compatible = "nvidia,imx219";
						reg = <0x10>;

						physical_w = "5.095";
						physical_h = "4.930";

						sensor_model ="imx219";
						avdd-reg = "vana";
						dvdd-reg = "vdig";
						iovdd-reg = "dovdd";
						devnode = "video3";

						/* Defines number of frames to be dropped by driver internally after applying */
						/* sensor crop settings. Some sensors send corrupt frames after applying */
						/* crop co-ordinates */
						post_crop_frame_drop = "0";

						mode0 { // IMX219_MODE_3280X2464
							mclk_khz = "12000";
							num_lanes = "2";
							tegra_sinterface = "serial_d";
							discontinuous_clk = "yes";
							cil_settletime = "0";

							active_w = "3280";
							active_h = "2464";
							pixel_t = "bayer_rggb";
							readout_orientation = "90";
							line_length = "3448";
							inherent_gain = "1";
							mclk_multiplier = "25";
							pix_clk_hz = "170000000";

							min_gain_val = "1.0";
							max_gain_val = "16.0";
							min_hdr_ratio = "1";
							max_hdr_ratio = "64";
							min_framerate = "1.462526";
							max_framerate = "21";
							min_exp_time = "13";
							max_exp_time = "683709";
						};
						ports {
							#address-cells = <1>;
							#size-cells = <0>;

							port@0 {
								reg = <0>;
								imx219_out3: endpoint {
									csi-port = <3>;
									bus-width = <2>;
									remote-endpoint = <&e3322_vi_in3>;
								};
							};
						};
					};
				};
				i2c@4 {
					imx219_e@10 {
						compatible = "nvidia,imx219";
						reg = <0x10>;

						physical_w = "5.095";
						physical_h = "4.930";

						sensor_model ="imx219";
						avdd-reg = "vana";
						dvdd-reg = "vdig";
						iovdd-reg = "dovdd";
						devnode = "video4";

						/* Defines number of frames to be dropped by driver internally after applying */
						/* sensor crop settings. Some sensors send corrupt frames after applying */
						/* crop co-ordinates */
						post_crop_frame_drop = "0";

						mode0 { // IMX219_MODE_3280X2464
							mclk_khz = "12000";
							num_lanes = "2";
							tegra_sinterface = "serial_e";
							discontinuous_clk = "yes";
							cil_settletime = "0";

							active_w = "3280";
							active_h = "2464";
							pixel_t = "bayer_rggb";
							readout_orientation = "90";
							line_length = "3448";
							inherent_gain = "1";
							mclk_multiplier = "25";
							pix_clk_hz = "170000000";

							min_gain_val = "1.0";
							max_gain_val = "16.0";
							min_hdr_ratio = "1";
							max_hdr_ratio = "64";
							min_framerate = "1.462526";
							max_framerate = "21";
							min_exp_time = "13";
							max_exp_time = "683709";
						};
						ports {
							#address-cells = <1>;
							#size-cells = <0>;

							port@0 {
								reg = <0>;
								imx219_out4: endpoint {
									csi-port = <4>;
									bus-width = <2>;
									remote-endpoint = <&e3322_vi_in4>;
								};
							};
						};
					};
				};
				i2c@5 {
					imx219_f@10 {
						compatible = "nvidia,imx219";
						reg = <0x10>;

						physical_w = "5.095";
						physical_h = "4.930";

						sensor_model ="imx219";
						avdd-reg = "vana";
						dvdd-reg = "vdig";
						iovdd-reg = "dovdd";
						devnode = "video5";

						/* Defines number of frames to be dropped by driver internally after applying */
						/* sensor crop settings. Some sensors send corrupt frames after applying */
						/* crop co-ordinates */
						post_crop_frame_drop = "0";

						mode0 { // IMX219_MODE_3280X2464
							mclk_khz = "12000";
							num_lanes = "2";
							tegra_sinterface = "serial_f";
							discontinuous_clk = "yes";
							cil_settletime = "0";

							active_w = "3280";
							active_h = "2464";
							pixel_t = "bayer_rggb";
							readout_orientation = "90";
							line_length = "3448";
							inherent_gain = "1";
							mclk_multiplier = "25";
							pix_clk_hz = "170000000";

							min_gain_val = "1.0";
							max_gain_val = "16.0";
							min_hdr_ratio = "1";
							max_hdr_ratio = "64";
							min_framerate = "1.462526";
							max_framerate = "21";
							min_exp_time = "13";
							max_exp_time = "683709";
						};
						ports {
							#address-cells = <1>;
							#size-cells = <0>;

							port@0 {
								reg = <0>;
								imx219_out5: endpoint {
									csi-port = <5>;
									bus-width = <2>;
									remote-endpoint = <&e3322_vi_in5>;
								};
							};
						};
					};
				};
			};
		};
	};
};

/* camera control gpio definitions */
/ {

	tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";

		/**
		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
		 * The first part is the camera_board_id for the module; if the module is in a FFD
		 * platform, then use the platform name for this part.
		 * The second part contains the position of the module, ex. “rear” or “front”.
		 * The third part contains the last 6 characters of a part number which is found
		 * in the module's specsheet from the vender.
		 */
		modules {
			module0 {
				badge = "e3322_bottomleft_A815P2";
				position = "bottomleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					proc-device-tree = "/proc/device-tree/host1x/i2c@546c0000/tca9548@77/i2c@0/imx219_a@10";
				};
			};
			module1 {
				badge = "e3322_centerleft_A815P2";
				position = "centerleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					proc-device-tree = "/proc/device-tree/host1x/i2c@546c0000/tca9548@77/i2c@1/imx219_b@10";
				};
			};
			module2 {
				badge = "e3322_centerleft_A815P2";
				position = "centerright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					proc-device-tree = "/proc/device-tree/host1x/i2c@546c0000/tca9548@77/i2c@2/imx219_c@10";
				};
			};
			module3 {
				badge = "e3322_centerleft_A815P2";
				position = "topleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					proc-device-tree = "/proc/device-tree/host1x/i2c@546c0000/tca9548@77/i2c@3/imx219_d@10";
				};
			};
			module4 {
				badge = "e3322_centerleft_A815P2";
				position = "bottomright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					proc-device-tree = "/proc/device-tree/host1x/i2c@546c0000/tca9548@77/i2c@4/imx219_e@10";
				};
			};
			module5 {
				badge = "e3322_centerleft_A815P2";
				position = "topright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					proc-device-tree = "/proc/device-tree/host1x/i2c@546c0000/tca9548@77/i2c@5/imx219_f@10";
				};
			};
		};
	};
};
